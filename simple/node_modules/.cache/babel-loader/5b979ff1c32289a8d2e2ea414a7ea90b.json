{"ast":null,"code":"import _objectSpread from \"/home/anub/Desktop/Simple/simple/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/anub/Desktop/Simple/simple/src/components/order.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios'; // import * as firebase from 'firebase';\n\nimport firebase1 from './firebase.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './order.css';\nimport List from './List.js';\nimport { connect } from 'react-redux';\nimport Logout from './Logout';\nimport { Redirect } from 'react-router-dom';\n\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n\n    this.rowExpandHandler = order => {\n      // (!this.state.rowexpand)?this.setState({ rowexpand: true }):this.setState({ rowexpand: false });\n      // if (!this.state.rowexpand) {\n      //     this.setState({ rowexpand: true })\n      // }\n      // else {\n      //     this.setState({ rowexpand: false })\n      // }\n      // this.setState({ rowid: order.id })\n      this.props.onAuthState(order.id);\n    };\n\n    this.removeorders = (e, order) => {\n      e.preventDefault();\n      Axios.delete('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token).then(res => console.log(res)).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.fullavailable = order => {\n      console.log(this.props.token);\n      const data = {\n        isAvailable: 'All Medicine are available'\n      };\n      Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data).then(res => {\n        return console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.partialyyavailable = order => {\n      const data = {\n        isAvailable: 'Medicine are Partially available'\n      };\n      Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data).then(res => {\n        return console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.notavailable = order => {\n      const data = {\n        isAvailable: 'Medicine are not available'\n      };\n      Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data).then(res => {\n        return console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.addmedicine = (order, medicine) => {\n      let medicineList = {};\n\n      for (var i = 0; i < medicine.length; ++i) {\n        medicineList[i] = medicine[i];\n      }\n\n      const data = {\n        medicineList\n      };\n      Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data).then(res => {\n        return console.log(res);\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      orders: [],\n      rowid: null,\n      rowexpand: true\n    };\n    this.itemsRef = firebase1.database().ref('users'); // this.itemsRef.on('value', data => {\n    //     const fetchedorders = [];\n    //     console.log(data.val());\n    //     // console.log(data.val()['-LjzhjgJJr1-YbIeAzon']['medicineList'])\n    //     for (let key in data.val()) {\n    //         fetchedorders.push({\n    //             ...data.val()[key],\n    //             id: key\n    //         })\n    //     }\n    //     this.setState({\n    //         orders: fetchedorders\n    //     })\n    // })\n  }\n\n  componentDidMount() {\n    console.log(this.props.token);\n    Axios.get('https://simple-30744.firebaseio.com/users.json').then(res => {\n      console.log(Object.keys(res.data)[0]);\n      const fetchedorders = [];\n\n      for (let key in res.data) {\n        fetchedorders.push(_objectSpread({}, res.data[key], {\n          id: key\n        }));\n      }\n\n      this.setState({\n        orders: fetchedorders\n      });\n      console.log(this.state.orders);\n    }).catch(err => alert('No Valid Token'));\n  }\n\n  componentDidUpdate() {\n    console.log('order');\n  }\n\n  render() {\n    let i = 1;\n    console.log(this.props.token);\n    let orders = this.state.orders.map(order => React.createElement(\"tbody\", {\n      key: order.id,\n      onClick: () => this.rowExpandHandler(order),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        height: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, order.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, order.userid), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: order.image,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Image\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, order.isConfirm), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn btn-danger\",\n      type: \"submit\",\n      onClick: e => this.removeorders(e, order),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Delete\"))), this.state.rowexpand ? React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colSpan: \"2\",\n      style: {\n        borderTop: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        width: \"500px\",\n        height: \"500px\"\n      },\n      src: order.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      colSpan: \"2\",\n      style: {\n        borderTop: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: () => this.fullavailable(order),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Fully Available\")), React.createElement(\"div\", {\n      style: {\n        marginBottom: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: () => this.partialyyavailable(order),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Partially Available\")), React.createElement(\"div\", {\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: () => this.notavailable(order),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Not Available\")))) : null, this.state.rowid === order.id && this.state.rowexpand ? React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      colspan: \"4\",\n      style: {\n        borderTop: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(List, {\n      addmedicine: list => this.addmedicine(order, list),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))) : null) // <li key={order.id} style={{ color: 'green' }}>\n    //     <div>{order.name}</div>\n    //     <div>{order.userid}</div>\n    //     <div><a href={order.image} target=\"_blank\">Image</a></div>\n    //     <button>Send</button>\n    //     <button type=\"submit\" onClick={e => this.removeorders(e, order)}>Delete</button>\n    // </li>\n    );\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Logout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        fontSize: \"50px\",\n        marginBottom: \"50px\",\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"Order Details\"), React.createElement(\"table\", {\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      class: \"td1\",\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      class: \"td2\",\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"UserId\"), React.createElement(\"th\", {\n      class: \"td3\",\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Prescription\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Confirm\"), React.createElement(\"th\", {\n      class: \"td4\",\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Delete\"))), orders));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.token // test:state.change\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthState: value => dispatch({\n      type: 'change',\n      value: value\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Order);","map":{"version":3,"sources":["/home/anub/Desktop/Simple/simple/src/components/order.js"],"names":["React","Component","Axios","firebase1","List","connect","Logout","Redirect","Order","constructor","props","rowExpandHandler","order","onAuthState","id","removeorders","e","preventDefault","delete","token","then","res","console","log","catch","err","fullavailable","data","isAvailable","patch","partialyyavailable","notavailable","addmedicine","medicine","medicineList","i","length","state","orders","rowid","rowexpand","itemsRef","database","ref","componentDidMount","get","Object","keys","fetchedorders","key","push","setState","alert","componentDidUpdate","render","map","height","name","userid","image","isConfirm","borderTop","width","marginBottom","list","fontSize","marginTop","mapStateToProps","mapDispatchToProps","dispatch","value","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\n// import * as firebase from 'firebase';\nimport firebase1 from './firebase.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './order.css';\nimport List from './List.js';\nimport { connect } from 'react-redux';\nimport Logout from './Logout';\nimport { Redirect } from 'react-router-dom'\n\n\n\n\n\nclass Order extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            orders: [],\n            rowid: null,\n            rowexpand: true\n\n\n        }\n        this.itemsRef = firebase1.database().ref('users')\n        // this.itemsRef.on('value', data => {\n        //     const fetchedorders = [];\n        //     console.log(data.val());\n        //     // console.log(data.val()['-LjzhjgJJr1-YbIeAzon']['medicineList'])\n        //     for (let key in data.val()) {\n        //         fetchedorders.push({\n        //             ...data.val()[key],\n        //             id: key\n        //         })\n        //     }\n        //     this.setState({\n        //         orders: fetchedorders\n        //     })\n        // })\n    }\n\n\n    componentDidMount() {\n        console.log(this.props.token)\n        Axios.get('https://simple-30744.firebaseio.com/users.json')\n            .then(res => {\n                console.log(Object.keys(res.data)[0]);\n                const fetchedorders = [];\n                for (let key in res.data) {\n                    fetchedorders.push({\n                        ...res.data[key],\n                        id: key\n                    })\n                }\n                this.setState({ orders: fetchedorders })\n                console.log(this.state.orders)\n            })\n            .catch(err => alert('No Valid Token'));\n    }\n\n\n\n    componentDidUpdate(){\n        console.log('order')\n    }\n\n\n    rowExpandHandler = (order) => {\n\n\n        // (!this.state.rowexpand)?this.setState({ rowexpand: true }):this.setState({ rowexpand: false });\n\n        // if (!this.state.rowexpand) {\n        //     this.setState({ rowexpand: true })\n        // }\n        // else {\n        //     this.setState({ rowexpand: false })\n        // }\n        // this.setState({ rowid: order.id })\n        this.props.onAuthState(order.id);\n    }\n\n    removeorders = (e, order) => {\n        e.preventDefault();\n        Axios.delete('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token)\n            .then(res => console.log(res))\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    fullavailable = (order) => {\n        console.log(this.props.token)\n        const data = {\n            isAvailable: 'All Medicine are available',\n        }\n\n        Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data)\n            .then(res => {\n                return console.log(res)\n            })\n            .catch(err => console.log(err))\n    }\n\n    partialyyavailable = (order) => {\n\n        const data = {\n            isAvailable: 'Medicine are Partially available',\n        }\n\n        Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data)\n            .then(res => {\n                return console.log(res)\n            })\n            .catch(err => console.log(err))\n    }\n\n    notavailable = (order) => {\n        const data = {\n            isAvailable: 'Medicine are not available',\n        }\n\n        Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data)\n            .then(res => {\n                return console.log(res)\n            })\n            .catch(err => console.log(err))\n    }\n\n    addmedicine = (order, medicine) => {\n\n        let medicineList = {};\n        for (var i = 0; i < medicine.length; ++i) {\n            medicineList[i] = medicine[i];\n        }\n\n        const data = { medicineList }\n        Axios.patch('https://simple-30744.firebaseio.com/users/' + order.id + '.json?auth=' + this.props.token, data)\n            .then(res => {\n                return console.log(res)\n            })\n            .catch(err => console.log(err))\n    }\n\n\n\n    render() {\n        let i = 1;\n        console.log(this.props.token)\n        let orders = this.state.orders.map(order => (\n            <tbody key={order.id} onClick={() => this.rowExpandHandler(order)} >\n                <tr style={{ height: \"50px\" }} >\n                    <td scope=\"row\">{order.name}</td>\n                    <td>{order.userid}</td>\n                    <td><a href={order.image} target=\"_blank\">Image</a></td>\n                    <td>{order.isConfirm}</td>\n                    <td>\n                        <button class=\"btn btn-danger\" type=\"submit\" onClick={e => this.removeorders(e, order)}>Delete</button>\n                        {/* <button class=\"btn btn-danger\" style={{ marginLeft: \"10px\" }} type=\"submit\" onClick={e => this.removeorders(e, order)}>List</button> */}\n                    </td>\n                </tr>\n\n                {((this.state.rowexpand)) ? (<tr>\n                    <td colSpan=\"2\" style={{ borderTop: \"none\" }}>\n                        <img style={{ width: \"500px\", height: \"500px\" }} src={order.image} />\n                    </td>\n                    <td colSpan=\"2\" style={{ borderTop: \"none\" }}>\n                        <div style={{ marginBottom: \"30px\" }}>\n                            <button class=\"btn btn-primary\" onClick={() => this.fullavailable(order)}>\n                                Fully Available\n                            </button>\n                        </div >\n\n                        <div style={{ marginBottom: \"30px\" }} >\n                            <button class=\"btn btn-primary\" onClick={() => this.partialyyavailable(order)}>\n                                Partially Available\n                        </button>\n                        </div>\n                        <div class=\"btn btn-primary\">\n                            <button class=\"btn btn-primary\" onClick={() => this.notavailable(order)}>\n                                Not Available\n                        </button>\n                        </div>\n                    </td>\n                </tr>) : null}\n                {((this.state.rowid === order.id) && this.state.rowexpand) ? (<tr>\n                    <td colspan=\"4\" style={{ borderTop: \"none\" }}>\n                        <List addmedicine={(list) => this.addmedicine(order, list)} />\n                    </td>\n\n                </tr>) : null}\n\n            </tbody>\n\n\n            // <li key={order.id} style={{ color: 'green' }}>\n            //     <div>{order.name}</div>\n            //     <div>{order.userid}</div>\n            //     <div><a href={order.image} target=\"_blank\">Image</a></div>\n            //     <button>Send</button>\n            //     <button type=\"submit\" onClick={e => this.removeorders(e, order)}>Delete</button>\n            // </li>\n        ))\n        return (\n            <div>\n                <Logout />\n                <div style={{ fontSize: \"50px\", marginBottom: \"50px\", marginTop: \"20px\" }}>Order Details</div>\n                <table class=\"table\">\n                    <thead>\n                        <tr>\n                            <th class=\"td1\" scope=\"col\">Name</th>\n                            <th class=\"td2\" scope=\"col\">UserId</th>\n                            <th class=\"td3\" scope=\"col\">Prescription</th>\n                            <th>Confirm</th>\n                            <th class=\"td4\" scope=\"col\">Delete</th>\n                        </tr>\n                    </thead>\n                    {orders}\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.token,\n        // test:state.change\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthState: ((value) => dispatch({ type: 'change', value: value }))\n  };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(Order);"]},"metadata":{},"sourceType":"module"}